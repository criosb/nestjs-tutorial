//// Session 0 ////

// Install nestjs
npm install -g @nestjs/cli

// nest version
nest --version

// create new nest project
nest new nestjs-tutorial

// create module
nest g mo users

// create service in a custom (services) folder
nest g s users/services/users --flat

// create controller in a custom (controllers) folder
nest g co users/controllers/users --flat

//// Session 1 ////

// install nestjs config module
pnpm add -P @nestjs/config

// install morgan logger and types
pnpm add -P morgan
pnpm add -D @types/morgan

//// Session 2 ////

// run docker-compose
docker-compose up

//// Session 3 ////

// install typeorm with postgres client
pnpm add -P @nestjs/typeorm typeorm pg

// install typeorm naming strategies
pnpm add -P typeorm-naming-strategies

// create projects module
nest g mo projects

//// Session 4 ////

// install class-validator and class-transformer (validation utilities)
pnpm add -P class-validator class-transformer

// install mapped type (validation utilities)
pnpm add -P @nestjs/mapped-types

// generate and run migration
pnpm run m:gen -- ./migrations/init
pnpm run m:run

// create service projects service
nest g s projects/services/projects --flat

//// Session 6 ////

// create service projects controller
nest g co projects/controllers/projects --flat

//// Session 7 ////

// install bcryps and jsonwebtoken
pnpm add -P bcrypt jsonwebtoken
pnpm add -D @types/bcrypt @types/jsonwebtoken

// rereate docker postgres container
docker ps
docker rm -f 49fa74906a30
docker-compose up -d
pnpm run m:gen -- src/migrations/init
pnpm run m:run

// create authentication module, service and controller
nest g mo auth
nest g s auth/services/auth --flat
nest g co auth/controllers/auth --flat

//// Session 8 ////

// create auth guard
nest g gu auth/guards/auth --flat
nest g gu auth/guards/roles --flat --no-spec
